name: Continuous Integration

on:
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master ]

jobs:
  lint-and-validate:
    runs-on: ubuntu-latest
    name: Lint and Validate Portfolio
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install HTML validator
        run: |
          sudo apt-get update
          sudo apt-get install -y tidy

      - name: Validate HTML files
        run: |
          echo "Validating HTML files..."
          find Nithilan -name "*.html" -type f | while read file; do
            echo "Validating: $file"
            if ! tidy -q -e "$file"; then
              echo "❌ HTML validation failed for: $file"
              exit 1
            else
              echo "✅ HTML validation passed for: $file"
            fi
          done

      - name: Check CSS files
        run: |
          echo "Checking CSS files..."
          find Nithilan -name "*.css" -type f | while read file; do
            echo "Checking: $file"
            # Basic CSS syntax check
            if grep -q "}" "$file" && grep -q "{" "$file"; then
              echo "✅ CSS file appears valid: $file"
            else
              echo "⚠️  CSS file might have issues: $file"
            fi
          done

      - name: Check JavaScript files
        run: |
          echo "Checking JavaScript files..."
          find Nithilan -name "*.js" -type f | while read file; do
            echo "Checking: $file"
            # Basic JS syntax check using Node.js
            if node -c "$file" 2>/dev/null; then
              echo "✅ JavaScript syntax valid: $file"
            else
              echo "❌ JavaScript syntax error in: $file"
              exit 1
            fi
          done

      - name: Check for broken internal links
        run: |
          echo "Checking for broken internal links..."
          
          # Check for HTML files referenced in href attributes
          find Nithilan -name "*.html" -type f | while read file; do
            echo "Checking links in: $file"
            
            # Extract href values that point to .html files
            grep -o 'href="[^"]*\.html"' "$file" | sed 's/href="//;s/"//' | while read link; do
              # Skip external links and anchors
              if [[ "$link" =~ ^https?:// ]] || [[ "$link" =~ ^# ]]; then
                continue
              fi
              
              # Check if the referenced file exists
              if [[ -f "Nithilan/$link" ]]; then
                echo "✅ Link exists: $link"
              else
                echo "❌ Broken link found: $link in $file"
                exit 1
              fi
            done
          done

      - name: Check for missing assets
        run: |
          echo "Checking for missing assets..."
          
          # Check for images, CSS, and JS files referenced in HTML
          find Nithilan -name "*.html" -type f | while read file; do
            echo "Checking assets in: $file"
            
            # Check CSS files
            grep -o 'href="[^"]*\.css"' "$file" | sed 's/href="//;s/"//' | while read css; do
              if [[ ! "$css" =~ ^https?:// ]] && [[ ! -f "Nithilan/$css" ]]; then
                echo "❌ Missing CSS file: $css referenced in $file"
                exit 1
              fi
            done
            
            # Check JS files
            grep -o 'src="[^"]*\.js"' "$file" | sed 's/src="//;s/"//' | while read js; do
              if [[ ! "$js" =~ ^https?:// ]] && [[ ! -f "Nithilan/$js" ]]; then
                echo "❌ Missing JS file: $js referenced in $file"
                exit 1
              fi
            done
            
            # Check image files
            grep -o 'src="[^"]*\.\(png\|jpg\|jpeg\|gif\|svg\|webp\)"' "$file" | sed 's/src="//;s/"//' | while read img; do
              if [[ ! "$img" =~ ^https?:// ]] && [[ ! -f "Nithilan/$img" ]]; then
                echo "❌ Missing image file: $img referenced in $file"
                exit 1
              fi
            done
          done

      - name: Portfolio structure check
        run: |
          echo "Checking portfolio structure..."
          
          # Check if main files exist
          required_files=("index.html" "contact.html")
          for file in "${required_files[@]}"; do
            if [[ -f "Nithilan/$file" ]]; then
              echo "✅ Required file exists: $file"
            else
              echo "❌ Missing required file: $file"
              exit 1
            fi
          done
          
          # Check if assets directory exists
          if [[ -d "Nithilan/assets" ]]; then
            echo "✅ Assets directory exists"
          else
            echo "❌ Assets directory missing"
            exit 1
          fi

      - name: Generate validation report
        if: always()
        run: |
          echo "## Portfolio Validation Report" > validation-report.md
          echo "Generated on: $(date)" >> validation-report.md
          echo "" >> validation-report.md
          echo "### Files Validated:" >> validation-report.md
          find Nithilan -name "*.html" -type f | wc -l | xargs echo "- HTML files:" >> validation-report.md
          find Nithilan -name "*.css" -type f | wc -l | xargs echo "- CSS files:" >> validation-report.md
          find Nithilan -name "*.js" -type f | wc -l | xargs echo "- JavaScript files:" >> validation-report.md
          echo "" >> validation-report.md
          echo "Validation completed successfully! 🎉" >> validation-report.md

      - name: Upload validation report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: validation-report
          path: validation-report.md
